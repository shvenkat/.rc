# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2009-2015, Marcel Hellkamp
# This file is distributed under the same license as the Bottle package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: bottle\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-01-22 16:45-0200\n"
"PO-Revision-Date: 2015-01-22 19:38+0000\n"
"Last-Translator: Thiago Avelino <thiago@avelino.xxx>\n"
"Language-Team: Chinese (China) (http://www.transifex.com/projects/p/bottle/language/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

# 947e5bcaff794f2cb8eea9913f7bb48e
#: ../../routing.rst:3
msgid "Request Routing"
msgstr "URL映射"

# ff0d4148065c40fb99f9f70c0b6d4bd8
#: ../../routing.rst:5
msgid ""
"Bottle uses a powerful routing engine to find the right callback for each "
"request. The :ref:`tutorial <tutorial-routing>` shows you the basics. This "
"document covers advanced techniques and rule mechanics in detail."
msgstr "Bottle内置一个强大的route引擎，可以给每个浏览器请求找到正确的回调函数。 :ref:`tutorial <tutorial-routing>` 中已经介绍了一些基础知识。接下来是一些进阶知识和route的规则。"

# 8e84d86f1f314a18bcad6041ea2bfee3
#: ../../routing.rst:8
msgid "Rule Syntax"
msgstr "route的语法"

# ea073c3cc19544a7aad8d539584320bf
#: ../../routing.rst:10
msgid ""
"The :class:`Router` distinguishes between two basic types of routes: "
"**static routes** (e.g. ``/contact``) and **dynamic routes** (e.g. "
"``/hello/<name>``). A route that contains one or more *wildcards* it is "
"considered dynamic. All other routes are static."
msgstr ":class:`Router` 类中明确区分两种类型的route： **静态route** (例如 ``/contact`` )和 **动态route** (例如 ``/hello/<name>`` )。包含了 *通配符* 的route即是动态route，除此之外的都是静态的。"

# df980c1ca3c44792b9419454610f9fff
#: ../../routing.rst:14
msgid ""
"The simplest form of a wildcard consists of a name enclosed in angle "
"brackets (e.g. ``<name>``). The name should be unique for a given route and "
"form a valid python identifier (alphanumeric, starting with a letter). This "
"is because wildcards are used as keyword arguments for the request callback "
"later."
msgstr "包含通配符，最简单的形式就是将其放到一对<>里面(例如 ``<name>`` )。在同一个route里面，这个变量名需要是唯一的。因为稍后会将其当作参数传给回调函数，所以这个变量名的第一个字符应该是字母。"

# 827ee55a8cf844f2a870edd4ceef3fd9
#: ../../routing.rst:16
msgid ""
"Each wildcard matches one or more characters, but stops at the first slash "
"(``/``). This equals a regular expression of ``[^/]+`` and ensures that only"
" one path segment is matched and routes with more than one wildcard stay "
"unambiguous."
msgstr "每一个通配符匹配一个或多个字符，直到遇到 ``/`` 。类似于 ``[^/]+`` 这样一个正则表达式，确保在route包含多个通配符的时候不出现歧义。"

# 97db942e0a614a428ea76dad9adbf814
#: ../../routing.rst:18
msgid "The rule ``/<action>/<item>`` matches as follows:"
msgstr "``/<action>/<item>`` 这个规则匹配的情况如下"

# 92f3296dbf444e59b4dd678a6ef1eca8
#: ../../routing.rst:21
msgid "Path"
msgstr "路径"

# b2b90f53658547fc97ace78a82d486bb
#: ../../routing.rst:21
msgid "Result"
msgstr "结果"

# b9075ae91346426f95a35a4571ac68df
#: ../../routing.rst:23
msgid "/save/123"
msgstr ""

# ed768322a1c14faa9e48ab8776d86e69
#: ../../routing.rst:23
msgid "``{'action': 'save', 'item': '123'}``"
msgstr ""

# 7449f8e375214d1abc73474d77468f1d
#: ../../routing.rst:24
msgid "/save/123/"
msgstr ""

# 78f9c453ab714f989543908a4131f60b
# 584b0ea8c06e4ac7b58399e2e41aa976
# ed38019c27634f618a3da11c2ad5c5ce
#: ../../routing.rst:24 ../../routing.rst:25 ../../routing.rst:26
msgid "`No Match`"
msgstr "不匹配"

# 69b026e714eb4cfcaa47555b70ef5978
#: ../../routing.rst:25
msgid "/save/"
msgstr ""

# 796993a4ecdb457d86998c53214ee7ab
#: ../../routing.rst:26
msgid "//123"
msgstr ""

# f1afc9cbf8b342edbe02c974ed3e4097
#: ../../routing.rst:29
msgid ""
"You can change the exact behaviour in many ways using filters. This is "
"described in the next section."
msgstr "你可通过过滤器来改变这一行为，稍后会介绍。"

# c4ff5cf44f36458aa0e2d491542c1ad6
#: ../../routing.rst:32
msgid "Wildcard Filters"
msgstr "通配符过滤器"

# 2062188b17174a76903f8b88893999b7
#: ../../routing.rst:36
msgid ""
"Filters are used to define more specific wildcards, and/or transform the "
"matched part of the URL before it is passed to the callback. A filtered "
"wildcard is declared as ``<name:filter>`` or ``<name:filter:config>``. The "
"syntax for the optional config part depends on the filter used."
msgstr "过滤器被用于定义更特殊的通配符，可在URL中\"被匹配到的部分\"被传递给回调函数之前，处理其内容。可通过 ``<name:filter>`` 或 ``<name:filer:config>`` 这样的语句来声明一个过滤器。\"config\"部分的语法由被使用的过滤器决定。"

# 13c4dde0508148e2aff1e06b840587a3
#: ../../routing.rst:38
msgid "The following standard filters are implemented:"
msgstr "Bottle中已实现以下过滤器:"

# 3edaa6da891b4ae5889edf18e2e2964b
#: ../../routing.rst:40
msgid "**:int** matches (signed) digits and converts the value to integer."
msgstr "**:int** 匹配一个整形数，并将其转换为int"

# 7383bdbbc9e347cc9c7c427fef9c3dc8
#: ../../routing.rst:41
msgid "**:float** similar to :int but for decimal numbers."
msgstr "**:float** 同上，匹配一个浮点数"

# 9fbf66cd7c344594bc1670e597d6c29a
#: ../../routing.rst:42
msgid ""
"**:path** matches all characters including the slash character in a non-"
"greedy way and may be used to match more than one path segment."
msgstr "**:path** 匹配所有字符，包括'/'"

# aae42b37183c4569aad53d5a327b4355
#: ../../routing.rst:43
msgid ""
"**:re[:exp]** allows you to specify a custom regular expression in the "
"config field. The matched value is not modified."
msgstr "**:re[:exp]** 允许在exp中写一个正则表达式"

# 3c2029b7595b48f6b236d85575c35f6c
#: ../../routing.rst:45
msgid ""
"You can add your own filters to the router. All you need is a function that "
"returns three elements: A regular expression string, a callable to convert "
"the URL fragment to a python value, and a callable that does the opposite. "
"The filter function is called with the configuration string as the only "
"parameter and may parse it as needed::"
msgstr "你可在route中添加自己写的过滤器。过滤器是一个有三个返回值的函数：一个正则表达式，一个callable的对象(转换URL片段为Python对象)，另一个callable对象(转换Python对象为URL片段)。过滤器仅接受一个参数，就是设置字符串(译者注：例如re过滤器的exp部分)。"

# 1910ec9ae553427eb68682bc4f1adb79
#: ../../routing.rst:71
msgid "Legacy Syntax"
msgstr "旧语法"

# a53374188849429f875c3d83f976139e
#: ../../routing.rst:75
msgid ""
"The new rule syntax was introduce in **Bottle 0.10** to simplify some common"
" use cases, but the old syntax still works and you can find lot code "
"examples still using it. The differences are best described by example:"
msgstr "在 **Bottle 0.10** 版本中引入了新的语法，来简单化一些常见用例，但依然兼容旧的语法。新旧语法的区别如下。"

# 4b05d35659594d039b9095a1c0edcb3a
#: ../../routing.rst:78
msgid "Old Syntax"
msgstr "旧语法"

# 3f3535af8cff41f18b6a5f9c1efd4770
#: ../../routing.rst:78
msgid "New Syntax"
msgstr "新语法"

# e17c2d410f9a4034ad1395a3dc59e297
#: ../../routing.rst:80
msgid "``:name``"
msgstr ""

# 55d03e3b7f264ba8835959573fdea5f8
#: ../../routing.rst:80
msgid "``<name>``"
msgstr ""

# 81d801b1278e41c08d9d80fe23ad87f9
#: ../../routing.rst:81
msgid "``:name#regexp#``"
msgstr ""

# a5aabb65592147c3866d6b862ad95b33
#: ../../routing.rst:81
msgid "``<name:re:regexp>``"
msgstr ""

# 6e8bd5bdb727473e95c87d72b776b407
#: ../../routing.rst:82
msgid "``:#regexp#``"
msgstr ""

# ba33f5b4231044ea84180cd68368ec7d
#: ../../routing.rst:82
msgid "``<:re:regexp>``"
msgstr ""

# 92e0fe829c514e7e9268e991e7bdd8a2
#: ../../routing.rst:83
msgid "``:##``"
msgstr ""

# e4ff281981d543ee8507f78835748c7d
#: ../../routing.rst:83
msgid "``<:re>``"
msgstr ""

# 4d44ae09e6fc44ce9d81e8ae6b4f297d
#: ../../routing.rst:86
msgid ""
"Try to avoid the old syntax in future projects if you can. It is not "
"currently deprecated, but will be eventually."
msgstr "请尽量在新项目中避免使用旧的语法，虽然它现在还没被废弃，但终究会的。"

# 781a03f253834a4ea70e589820ed6fcb
#: ../../routing.rst:91
msgid "Explicit routing configuration"
msgstr "显式的route配置"

# 8bd7c04b74ba436098d5825c1487fceb
#: ../../routing.rst:93
msgid ""
"Route decorator can also be directly called as method. This way provides "
"flexibility in complex setups, allowing you to directly control, when and "
"how routing configuration done."
msgstr "route修饰器也可以直接当作函数来调用。在复杂的部署中，这种方法或许更灵活，直接由你来控制“何时”及“如何”配置route。"

# 5d31646155bd44049560ec23ac4ca1a3
#: ../../routing.rst:95
msgid ""
"Here is a basic example of explicit routing configuration for default bottle"
" application::"
msgstr "下面是一个简单的例子"

# 300cc65d0cad44a9b8d06227ff431489
#: ../../routing.rst:101
msgid ""
"In fact, any :class:`Bottle` instance routing can be configured same way::"
msgstr "实际上，bottle可以是任何 :class:`Bottle` 类的实例"
