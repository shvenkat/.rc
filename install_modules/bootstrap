#!/bin/sh

set -e -u -o pipefail


NAME="$(basename -- "$0")"
PREFIX="$(dirname -- "$0")"


# Show usage; do not exit.
usage () {
    echo "Usage: $NAME [-h|--help]"
    echo '    Runs the other installer modules in a bootstrap sequence.'
}


# ----------  Logging  -------------------------------------------------------

# Initialize logging by setting global variables.
init_logger () {
    if [ -t 1 ]; then
        NORMAL="\e[0m"
        BOLD="\e[1m"
        RED="\e[31m"
        YELLOW="\e[33m"
    else
        NORMAL=""
        BOLD=""
        RED=""
        YELLOW=""
    fi
}


# Output formatted error message and exit.
error () {
    env echo -e "${RED}ERROR${NORMAL}${BOLD}   [$NAME]  $*${NORMAL}"
    exit 1
}


# Output formatted warning messages.
warn () {
    env echo -e "${YELLOW}WARNING${NORMAL}${BOLD} [$NAME]  $*${NORMAL}"
}


# Output formatted informational messages.
info () {
    env echo -e "${BOLD}INFO    [$NAME]  $*${NORMAL}"
}


# Output formatted debug messages.
debug () {
    env echo -e "${NORMAL}DEBUG   [$NAME]  $*"
}


# Run a command, logging its output. If an error is encountered, output an error message and exit.
# Args:
#   $@: Command and arguments to be run.
run () {
    debug "Running: $* (in $(pwd))."
    ("$@" 2>&1 | while IFS='' read -r line; do echo "        $line"; done) \
        || error "$1 command failed."
}


# ----------  main  ----------------------------------------------------------

init_logger

# Parse arguments.
if [ $# -eq 1 ] && ([ "$1" = "-h" ] || [ "$1" = "--help" ]); then
    usage
    exit 0
fi
if [ $# -gt 0 ]; then
    usage
    exit 1
fi

run_module () {
    [ -x "$1" ] || error "Missing install module $1"
    info "Running install module: $(basename -- "$1")."
    run "$@"
}

# Install requested components.
run_module "$PREFIX/prereq"
run_module "$PREFIX/utils"

case "$OSTYPE" in
    linux*)
        export PATH="$HOME/.linuxbrew/bin:$PATH"
        ;;
    darwin*)
        export PATH="/usr/local/bin:$PATH"
        ;;
    *)
        error "Error: unknown OS - $OSTYPE."
        ;;
esac

run_module "$PREFIX/dotfiles"
run_module "$PREFIX/apps"
run_module "$PREFIX/settings"
