#!/bin/sh

set -e -u -o pipefail


NAME="$(basename -- "$0")"
PREFIX="$(dirname -- "$0")"
OSTYPE="$(uname -s | tr '[:upper:]' '[:lower:]')"

HOMEBREW_CASK_TAPS="$PREFIX/brew/homebrew_cask_taps.txt"
HOMEBREW_CASKS="$PREFIX/brew/homebrew_casks.txt"
LINUXBREW_CASK_TAPS="$PREFIX/brew/linuxbrew_cask_taps.txt"
LINUXBREW_CASKS="$PREFIX/brew/linuxbrew_casks.txt"


# Show usage.
# Args: None.
usage () {
    echo "Usage: $NAME [-h|--help]"
    echo '    Installs various applications, using bork.'
}


# ----------  Logging  -------------------------------------------------------

# Initialize logging by setting global variables.
init_logger () {
    if [ -t 1 ]; then
        NORMAL="\e[0m"
        BOLD="\e[1m"
        RED="\e[31m"
        YELLOW="\e[33m"
    else
        NORMAL=""
        BOLD=""
        RED=""
        YELLOW=""
    fi
}


# Output formatted error message and exit.
error () {
    env echo -e "${RED}ERROR${NORMAL}${BOLD}   [$NAME]  $*${NORMAL}"
    exit 1
}


# Output formatted warning messages.
warn () {
    env echo -e "${YELLOW}WARNING${NORMAL}${BOLD} [$NAME]  $*${NORMAL}"
}


# Output formatted informational messages.
info () {
    env echo -e "${BOLD}INFO    [$NAME]  $*${NORMAL}"
}

# Output formatted debug messages.
# Args:
#   $@: Messages.
debug () {
    env echo -e "${NORMAL}DEBUG   [$NAME]  $*"
}


# Run a command, logging its output. If an error is encountered, output an error message and exit.
# Args:
#   $@: Command and arguments to be run.
run () {
    debug "Running: $* (in $(pwd))."
    ("$@" 2>&1 | while IFS='' read -r line; do echo "        $line"; done) \
        || error "$1 command failed."
}


# ----------  main  ----------------------------------------------------------

init_logger

# Check usage.
if [ $# -eq 1 ] && ([ "$1" = "-h" ] || [ "$1" = "--help" ]); then
    usage
    exit 0
fi
if [ $# -gt 0 ]; then
    usage
    exit 1
fi

# Verify prerequisites are met.
which brew >/dev/null 2>&1 || error "Missing requirement: brew. Install homebrew/linuxbrew."
which bork >/dev/null 2>&1 || error "Missing requirement: bork."

# Ensure installation of various apps using bork and homebrew/linuxbrew.
case "$OSTYPE" in
    linux*)
        TAPS="$LINUXBREW_CASK_TAPS"
        CASKS="$LINUXBREW_CASKS"
        ;;
    darwin*)
        TAPS="$HOMEBREW_CASK_TAPS"
        CASKS="$HOMEBREW_CASKS"
        ;;
    *)
        error "Error: unknown OS - $OSTYPE."
        ;;
esac
if [ -r "$TAPS" ] && [ -r "$CASKS" ]; then
    while IFS='' read -r tap; do
        if echo "$tap" | grep -q '^[^#]'; then
            info "Ensuring installation of cask tap $tap."
            run bork 'do' ok brew-tap "$tap"
        fi
    done < "$TAPS"
    while IFS='' read -r cask; do
        if echo "$cask" | grep -q '^[^#]'; then
            info "Ensuring installation of cask $cask."
            run bork 'do' ok cask "$cask"
        fi
    done < "$CASKS"
fi
