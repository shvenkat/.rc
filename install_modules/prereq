#!/bin/sh

set -e -u -o pipefail


NAME="$(basename -- "$0")"
OSTYPE="$(uname -s | tr '[:upper:]' '[:lower:]')"


# Show usage.
# Args: None.
usage () {
    echo "Usage: $NAME [-h|--help]"
    echo '    Verifies that pre-requisites, such as a build toolchain, are'
    echo '    installed. These must be provided by the OS and are required'
    echo '    by other install modules.'
}


# ----------  Logging  -------------------------------------------------------

# Initialize logging by setting global variables.
# Args: None.
init_logger () {
    if [ -t 1 ]; then
        NORMAL="\e[0m"
        BOLD="\e[1m"
        RED="\e[31m"
        YELLOW="\e[33m"
    else
        NORMAL=""
        BOLD=""
        RED=""
        YELLOW=""
    fi
}

# Output formatted error message _and exit_.
# Args:
#   $@: Messages.
error () {
    env echo -e "${RED}ERROR${NORMAL}${BOLD}   [$NAME]  $*${NORMAL}"
    exit 1
}

# Output formatted warning messages.
# Args:
#   $@: Messages.
warn () {
    env echo -e "${YELLOW}WARNING${NORMAL}${BOLD} [$NAME]  $*${NORMAL}"
}

# Output formatted informational messages.
# Args:
#   $@: Messages.
info () {
    env echo -e "${BOLD}INFO    [$NAME]  $*${NORMAL}"
}

# Output formatted debug messages.
# Args:
#   $@: Messages.
debug () {
    env echo -e "${NORMAL}DEBUG   [$NAME]  $*"
}

# Run a command, logging its output. If an error is encountered, output an error message and exit.
# Args:
#   $@: Command and arguments to be run.
run () {
    debug "Running: $* (in $(pwd))."
    ("$@" 2>&1 | while IFS='' read -r line; do echo "        $line"; done) \
        || error "$1 command failed."
}


# ----------  main  ----------------------------------------------------------

init_logger

# Check usage.
if [ $# -eq 1 ] && ([ "$1" = "-h" ] || [ "$1" = "--help" ]); then
    usage
    exit 0
fi
if [ $# -gt 0 ]; then
    usage
    exit 1
fi

# OS-specific prereqs.
case "$OSTYPE" in
    linux*)
        info "Satisfying Linux-specific prerequisites."
        run sudo apt-get install build-essential curl file git python-setuptools ruby
        ;;
    darwin*)
        info "Satisfying MacOS-specific prerequisites."
        test -x /usr/bin/clang || run xcode-select --install
        ;;
    *)
        error "Unsupported OS: $OSTYPE"
        ;;
esac

# Generic prereqs.
info "Satisfying non-OS-specific prerequisites."
which ruby >/dev/null 2>&1 || error "Missing dependency - ruby not found."
