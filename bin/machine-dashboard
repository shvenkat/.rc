#!/bin/bash

# See https://github.com/erikw/tmux-powerline for tips

CPU_WARNING_THRESHOLD=20
CPU_CRITICAL_THRESHOLD=101
MEMORY_WARNING_THRESHOLD=90
MEMORY_CRITICAL_THRESHOLD=101
SWAP_WARNING_THRESHOLD=1
SWAP_CRITICAL_THRESHOLD=100
DISK_WARNING_THRESHOLD=80
DISK_CRITICAL_THRESHOLD=95
BATTERY_WARNING_THRESHOLD=40
BATTERY_CRITICAL_THRESHOLD=20

if [[ "$1" == "--color" ]]; then
    warning_color='\033[1m'      # bold text
    critical_color='\033[31m'    # red text
    normal_color='\033[0m'       # default colors
elif [[ "$1" == "--tmux" ]]; then
    warning_color='#[bold]'      # bold text
    critical_color='#[fg=red]'   # red text
    normal_color='#[default]'    # default colors
else
    warning_color=''
    critical_color=''
    normal_color=''
fi


# Returns an ANSI color code (or the empty string).
colorize () {
    value=$1
    warning_threshold=$2
    critical_threshold=$3

    if [[ $warning_threshold -gt $critical_threshold ]]; then
        if [[ "$value" -le ${critical_threshold} ]]; then
                echo "$critical_color"
        elif [[ "$value" -le ${warning_threshold} ]]; then
                echo "$warning_color"
        else
                echo "$normal_color"
        fi
    else
        if [[ "$value" -ge ${critical_threshold} ]]; then
                echo "$critical_color"
        elif [[ "$value" -ge ${warning_threshold} ]]; then
                echo "$warning_color"
        else
                echo "$normal_color"
        fi
    fi
}


# Format status.
format_status () {
    value=$1
    suffix=$2
    warning_threshold=$3
    critical_threshold=$4

    if [[ "$value" == '--' ]]; then
        echo -n ""
    else
        color=$(colorize ${value} ${warning_threshold} ${critical_threshold})
        echo -n "${color}${value}${suffix}${normal_color}"
    fi
}


# MAIN

# Use OS-specific methods to get values of interest.
case $(uname) in

Darwin)
    cpu_percent=$(top -l2 -s3 \
                  | grep -F 'CPU usage' \
                  | tail -n1 \
                  | sed 's/.*, \([0-9.]*\)% idle/\1/' \
                  | awk '{ printf "%i\n",100 - $1}')
    memory_percent=$(( 100 \
                       - ( $(sysctl -n vm.page_free_count) \
                           + $(sysctl -n vm.page_purgeable_count)) \
                       * $(sysctl -n vm.pagesize) \
                       * 100 \
                       / $(sysctl -n hw.memsize) ))
    swap_percent=$(( 100 \
                     * $(sysctl -n vm.swapusage \
                         | sed -e 's/  /~/g' \
                         | tr '~' '\n' \
                         | grep 'used' \
                         | sed -e 's/^.*= \([0-9]*\).*/\1/') \
                     * 2**20 \
                     / $(sysctl -n hw.memsize) ))
    disk_percent=$(df -h / \
                   | grep '/$' \
                   | grep -o '[0-9]\+%' \
                   | tr -d '%')
    battery_percent=$(pmset -g batt \
                      | grep -o '[0-9]\+%' \
                      | tr -d '%')
    ;;

Linux)
    battery_percent="$((
        100 \
        * "$(cat /sys/class/power_supply/BAT1/charge_now)"
        / "$(cat /sys/class/power_supply/BAT1/charge_full)"
    ))"
    cpu_percent="$(
        top -b -n2 -d3 \
        | grep '^CPU:' \
        | tail -n1 \
        | sed -e 's/^.* \([0-9.]\+\)% idle .*$/\1/' \
        | awk '{ printf "%i\n",100 - $1 }'
    )"
    free_output="$(free)"
    memory_percent="$((
        100 \
        - 100 \
        * $(echo "$free_output" | grep -F 'Mem:' | awk '{ print $7 }') \
        / $(echo "$free_output" | grep -F 'Mem:' | awk '{ print $2 }')
    ))"
    swap_percent="$((
        100 \
        * $(echo "$free_output" | grep -F 'Swap' | awk '{ print $2 }') \
        / $(echo "$free_output" | grep -F 'Mem:' | awk '{ print $2 }')
    ))"
    disk_percent="$(
        df -h / \
        | grep '/$' \
        | grep -o '[0-9]\+%' \
        | tr -d '%'
    )"
    ;;

Cygwin)
    battery_percent='--'
    cpu_percent='--'
    ;;

*)
    battery_percent='--'
    cpu_percent='--'
    ;;

esac


# Format each value.
cpu_status=$(format_status $cpu_percent '%C' \
             $CPU_WARNING_THRESHOLD $CPU_CRITICAL_THRESHOLD)

memory_status=$(format_status $memory_percent '%M' \
                $MEMORY_WARNING_THRESHOLD $MEMORY_CRITICAL_THRESHOLD)

swap_status=$(format_status $swap_percent '%S' \
              $SWAP_WARNING_THRESHOLD $SWAP_CRITICAL_THRESHOLD)

disk_status=$(format_status $disk_percent '%D' \
              $DISK_WARNING_THRESHOLD $DISK_CRITICAL_THRESHOLD)

battery_status=$(format_status $battery_percent '%B' \
                 $BATTERY_WARNING_THRESHOLD $BATTERY_CRITICAL_THRESHOLD)

# Display all values.
echo -e "${cpu_status} ${memory_status} ${swap_status} ${disk_status} ${battery_status}"
