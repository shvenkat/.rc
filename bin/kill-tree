# !/bin/sh

# Send a signal to a process and all its children in depth-first order.
# Modified from: http://stackoverflow.com/a/3211182.

set -e -u -o pipefail


usage() {
    echo "Usage: $(basename "$0") <pid> [signal]"
    echo "    Send a signal (default TERM) to process <pid> and all its children."
}


killtree() {
    _pid="$1"
    _sig="$2"
    # Stop the parent to avoid spawning more children.
    kill -stop "${_pid}"
    for _child in $(pgrep -P "${_pid}"); do
        killtree "${_child}" "${_sig}"
    done
    kill "-${_sig}" "${_pid}"
}


# ----  main  ----

if [ $# -eq 0 ] || [ $# -gt 2 ]; then
    usage
    exit 1
elif [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
    usage
else
    pid="$1"
    sig="${2:-TERM}"
    command="$(ps -o command= -p "$pid")" || true
    if [ -z "$command" ]; then
        echo "Error: no process found with PID ${pid}."
        exit 1
    fi
    read -p "Confirm: signal ${sig} to process tree rooted at PID ${pid} (${command})? [y/N] " -r reply
    case "$reply" in
        [Yy]*)
            killtree "$pid" "$sig"
            echo "Done."
            ;;
        *)
            echo "Skipped."
            ;;
    esac
fi
